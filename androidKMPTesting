// Common code (shared between platforms)
package com.cibc.services.utilities

expect fun getLang(appRegion: String): String
expect fun getCountry(appRegion: String): String
expect fun localeToString(appRegion: String): String

// Android-specific implementation
package com.cibc.services.utilities

import java.util.Locale

actual fun getLang(appRegion: String): String {
    return when (appRegion) {
        "CA" -> if (Locale.getDefault().language == "fr") "fr" else "en"
        else -> "en" // Default to English for US and unknown regions
    }
}

actual fun getCountry(appRegion: String): String {
    return when (appRegion) {
        "US" -> "US"
        else -> "CA" // Default to CA for CA and unknown regions
    }
}

actual fun localeToString(appRegion: String): String {
    val lang = getLang(appRegion)
    val country = getCountry(appRegion)
    return "$lang-$country"
}


// iOS-specific implementation
package com.cibc.services.utilities

import platform.Foundation.NSLocale

actual fun getLang(appRegion: String): String {
    return when (appRegion) {
        "CA" -> if (NSLocale.currentLocale.languageCode == "fr") "fr" else "en"
        else -> "en" // Default to English for US and unknown regions
    }
}

actual fun getCountry(appRegion: String): String {
    return when (appRegion) {
        "US" -> "US"
        else -> "CA" // Default to CA for CA and unknown regions
    }
}

actual fun localeToString(appRegion: String): String {
    val lang = getLang(appRegion)
    val country = getCountry(appRegion)
    return "$lang-$country"
}
